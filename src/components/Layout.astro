---
import '../styles/base.css'
import { ViewTransitions } from 'astro:transitions';
import Technologies from "./Technologies.astro";
import {
	IconSun,
	IconGithub,
	IconLogo,
	IconLogoDark,
	IconCode,
	IconHome,
	IconPortafolio,
	CV,
} from "../components/icons";
import RoundIconButton from "./RoundIconButton.astro";
import SquareIconLink from "./SquareIconLink.astro";
import axios from "axios"


export interface Props {
	title: string;
}

const { title } = Astro.props as Props;   


---
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" sizes="16x16 32x32 48x48" type="image/png" href="./src/favicon/favicon-32x32.png" />
		<title>{title}</title>
	</head>

	<body
		class="flex flex-col items-center justify-center relative box-border min-h-screen lg:overflow-hidden bg-light-primary dark:bg-gradient-main-dark"
	>
	<ViewTransitions />
		<Technologies />
		<main
			class="flex flex-col p-4 m-4 md:p-8 md:my-10 md:mx-12 lg:my-0 w-full lg:w-[calc(100vw_-_50%)] rounded-tr-2xl rounded-tl-lg rounded-b-lg bg-gradient-box-light shadow-sky-light dark:bg-box-dark dark:shadow-orange-dark min-h-[calc(100vh_-_80px)] lg:h-[calc(100vh_-_100px)] justify-between"
		>
			<div class="flex w-full relative mb-2 md:mb-4">
				<a href="/" class="flex w-15 -top-5 sm:top-0 sm:w-fit absolute">
					<IconLogo/>
					<IconLogoDark/>
				</a>
				<div
					class="flex flex-col self-end text-right ml-auto text-xl w-fit text-light-blue-dark dark:text-dark-blue-light"
				>
					<h1 class="font-black leading-extra-loose md:text-3xl 2xl:text-4xl">
						Lenin
					</h1>
					<h1 class="font-thin leading-extra-loose text-sm md:text-2xl 2xl:text-4xl">
						Mendoza
					</h1>
				</div>

				<div
					class="flex w-fit h-fit px-1.25 py-1.25 ml-4 2xl:ml-8 shadow-switcher rounded-2xl dark:bg-buttons-box-dark dark:shadow-box-dark-out"
				>
					<div
						class="dark:shadow-buttons-box-dark rounded-2xl w-min flex sm:w-full px-1.5 py-1.5 md:px-3 md:py-3 h-fit"
					>
						<RoundIconButton
							srOnly="Theme color switcher"
							type="button"
							onclick="window.toggleTheme()"
						>
							<IconSun />
						</RoundIconButton>
						<span class="mr-4"></span>
						<SquareIconLink
							title="Link to pabloLC GitHub"
							href="https://github.com/paablolc/"
							target="_blank"
						>
							<IconGithub />
						</SquareIconLink>
					</div>
				</div>
			</div>
			<slot />

			<div
				class="flex self-end w-fit px-1.25 py-1.25 shadow-box-up rounded-2xl dark:bg-box-dark dark:shadow-box-dark-out"
			>
				<div class="dark:shadow-buttons-box-dark rounded-2xl w-full px-1.5 py-1.5 md:px-3 md:py-3">
					<SquareIconLink 
					title="Ir al Home" 
					target="_self" 
					href="/">
						<IconHome />
					</SquareIconLink>
					<SquareIconLink
						title="Ir a mis ultimos repos"
						target="_self"
						href="/repos"
					>
						<IconCode />
					</SquareIconLink>
					<SquareIconLink
						title="Ir a portafolio"
						target="_self"
						href="/porfolio"
					>
						<IconPortafolio />
					</SquareIconLink>
					<SquareIconLink
						title="Ir a mi CV"
						target="_self"
						href="https://dub.sh/portafoliocv"
					>
						<CV />
					</SquareIconLink>
				</div>
			</div>
		</main>

		<script transition:persist is:inline>
			const toggleTheme = () => {
				document.documentElement.classList.toggle("dark");
				localStorage.theme = document.documentElement.classList.contains("dark")
					? "dark"
					: "light";
			};

			window.toggleTheme = toggleTheme;

			if (localStorage.theme === "dark") {
				document.documentElement.classList.add("dark");
			} else {
				document.documentElement.classList.remove("dark");
			}
		</script>
	</body>
</html>